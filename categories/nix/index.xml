<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nix on cloud daydreams</title>
    <link>https://arrjay.github.io/categories/nix/</link>
    <description>Recent content in Nix on cloud daydreams</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>rbergero@gmail.com (RJ Bergeron)</managingEditor>
    <webMaster>rbergero@gmail.com (RJ Bergeron)</webMaster>
    <lastBuildDate>Mon, 09 Jul 2018 16:56:30 +0000</lastBuildDate>
    
	<atom:link href="https://arrjay.github.io/categories/nix/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The Foundation of Containerization - chroot</title>
      <link>https://arrjay.github.io/posts/chroot/</link>
      <pubDate>Mon, 09 Jul 2018 16:56:30 +0000</pubDate>
      <author>rbergero@gmail.com (RJ Bergeron)</author>
      <guid>https://arrjay.github.io/posts/chroot/</guid>
      <description>The foundation of containerization - chroot There is a lot of current popularity around the concept of linux containers, and here I wanted to detail one of the underpinnings - the chroot syscall.
Why Linux containers are not some mythical black box - they are a collection of files, combined with startup mechanics to perform an isolated task. The chroot system is very much the foundation of this by allowing a program (and any programs it starts) to have a different concept of a base filesystem.</description>
    </item>
    
    <item>
      <title>Environment Variables Rule Everything Around You</title>
      <link>https://arrjay.github.io/posts/environment/</link>
      <pubDate>Sat, 23 Jun 2018 00:18:42 -0400</pubDate>
      <author>rbergero@gmail.com (RJ Bergeron)</author>
      <guid>https://arrjay.github.io/posts/environment/</guid>
      <description>There&amp;rsquo;s lots of discussion for operating systems about processes, ipc, files and such, I wanted to take a moment and touch on some internals I find incredibly useful in my day to day work. Environment variables!
NOTE: I&amp;rsquo;m really only covering Linux/OS X/POSIX class systems here, Windows (and PowerShell) have some slightly different edges.
What Via Wikipedia - an environment variable is &amp;ldquo;a dynamic-named value that can affect the way running processes will behave on a computer.</description>
    </item>
    
  </channel>
</rss>